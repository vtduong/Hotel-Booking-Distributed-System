module RemoteMethodApp {
  interface RemoteMethod {

    exception RemoteException {
      string exceptReason;
    };

    exception AccessDeniedException {
      string exceptReason;
    };

    exception ClassNotFoundException {
      string exceptReason;
    };

    exception IOException {
      string exceptReason;
    };

    exception SecurityException {
      string exceptReason;
    };

    exception IllegalArgumentException {
      string exceptReason;
    };
	
	exception NoSuchFieldException {
      string exceptReason;
    };


    string addEvent(in string eventID, in string eventType, in long bookingCapacity) raises (RemoteException, AccessDeniedException, ClassNotFoundException, IOException);

    string removeEvent(in string eventID, in string eventType) raises (RemoteException, AccessDeniedException, ClassNotFoundException, SecurityException, IOException);

    string listEventAvailability(in string eventType) raises (RemoteException, AccessDeniedException, IOException, ClassNotFoundException, NoSuchFieldException);

    string bookEvent (in string customerID, in string eventID, in string eventType) raises (RemoteException, AccessDeniedException, ClassNotFoundException, IllegalArgumentException, IOException);

    string getBookingSchedule(in string customerID) raises (RemoteException, AccessDeniedException, ClassNotFoundException, IOException);

    string cancelEvent(in string customerID, in string eventID, in string eventType) raises (RemoteException, AccessDeniedException, ClassNotFoundException, IOException);
    
    string swapEvent(in string customerID, in string newEventID, in string newEventType, in string oldEventID, in string oldEventType) raises (RemoteException, AccessDeniedException, ClassNotFoundException, IOException, NoSuchFieldException, IllegalArgumentException);

  };
};